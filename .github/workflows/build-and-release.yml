name: Build and Release

on:
  push:
    branches:
      - master
  workflow_dispatch:
  
jobs:
  build-linux:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      GITHUB_ACTOR: ${{ github.actor }}
      GITHUB_TOKEN: ${{ secrets.GH_PACKA_GES_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          
      - name: Build project and copy dependencies
        run: |
          ./gradlew build copyDependencies
          
      - name: Install rpm build tools
        run: sudo apt-get update && sudo apt-get install -y rpm

      - name: Extract version from JAR
        run: |
          version=$(ls build/libs/* | sed 's/.*ambitusdesktop-\(.*\).jar/\1/')
          echo "version=$version" >> $GITHUB_ENV
          norm_version=$(echo "$version" | sed 's/[-].*//')
          echo "norm_version=$norm_version" >> $GITHUB_ENV
          if [[ $version =~ ^[0-9]+\.[0-9]+\.[0-9]+(-SNAPSHOT)?$ ]]; then
            echo "Version: $version (format approved)!"
            echo "Normalized version: $norm_version"
          else
            echo "Invalid version number: $version"
            exit;
          fi
          
      - name: Prepare MANIFEST and Dependencies
        run: |
          export year=`date +%Y`
          mkdir input
          cp build/libs/*.jar input/
          cp build/dependencies/*.jar input/
          cp build/resources/main/images/icon.* input/
          echo "Create installer version $version/$norm_version - $year"
          echo "Manifest-Version: 1.0" > MANIFEST.MF
          echo "Main-Class: org.wuerthner.ambitusdesktop.Ambitus" >> MANIFEST.MF
          echo "Implementation-Version: $version" >> MANIFEST.MF
          echo "CopyrightYear: $year" >> MANIFEST.MF
          jar -ufm "input/ambitusdesktop-$version.jar" MANIFEST.MF >/dev/null 2>&1
          echo "content:"
          ls -lR input
          ls -lR build
          
      - name: Package Linux installers
        run: |
          echo "- package linux debian version..."
          jpackage --input input --resource-dir input --dest output \
            -n "Ambitus" --main-jar "ambitusdesktop-$version.jar" \
            --main-class org.wuerthner.ambitusdesktop.Ambitus --type deb \
            --app-version "$norm_version" --linux-shortcut \
            --vendor "Ambitus Open Source" --icon input/icon.png
          echo "- package linux rpm version..."
          jpackage --input input --resource-dir input --dest output \
            -n "Ambitus" --main-jar "ambitusdesktop-$version.jar" \
            --main-class org.wuerthner.ambitusdesktop.Ambitus --type rpm \
            --app-version "$norm_version" --linux-shortcut \
            --vendor "Ambitus Open Source" --icon input/icon.png
          export debname=`ls output/ambitus*.deb | sed 's/.*\(ambitus.*deb\)/\1/'`
          export rpmname=`ls output/ambitus*.rpm | sed 's/.*\(ambitus.*rpm\)/\1/'`
          echo "- output: debian: $debname, rpm: $rpmname"
          ls -lR output
          mv output/$debname output/ambitus-$version.deb
          mv output/$rpmname output/ambitus-$version.rpm
          ls -lR output
          
          if [[ "$version" == *SNAPSHOT* ]]; then
            echo "prerelease=true" >> $GITHUB_ENV
          else
            echo "prerelease=false" >> $GITHUB_ENV
          fi
          
      - name: Fix Debian dependencies
        run: |
          mkdir tmp
          dpkg-deb -R output/*.deb tmp
          sed -i '/^Depends:/c\Depends: default-jre' tmp/DEBIAN/control
          rm output/*.deb
          dpkg-deb -b tmp output/ambitus-$version.deb
          rm -rf tmp
          
      - name: Upload Linux Debian Installer
        uses: actions/upload-artifact@v4
        with:
          name: ambitus-debian
          path: output/ambitus-${{ env.version }}.deb
          
      - name: Upload Linux RPM Installer
        uses: actions/upload-artifact@v4
        with:
          name: ambitus-rpm
          path: output/ambitus-${{ env.version }}.rpm

  build-windows:
    runs-on: windows-latest
    permissions:
      contents: read
    env:
      GITHUB_ACTOR: ${{ github.actor }}
      GITHUB_TOKEN: ${{ secrets.GH_PACKA_GES_TOKEN }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Build with Gradle
        run: ./gradlew build

      - name: Extract version from JAR
        shell: bash
        run: |
          version=$(ls build/libs/* | sed 's/.*ambitusdesktop-\(.*\).jar/\1/')
          echo "version=$version" >> $GITHUB_ENV
          norm_version=$(echo "$version" | sed 's/[-].*//')
          echo "norm_version=$norm_version" >> $GITHUB_ENV
          if [[ $version =~ ^[0-9]+\.[0-9]+\.[0-9]+(-SNAPSHOT)?$ ]]; then
            echo "Version: $version (format approved)!"
            echo "Normalized version: $norm_version"
          else
            echo "Invalid version number: $version"
            exit;
          fi

      - name: Prepare MANIFEST and Dependencies
        shell: bash
        run: |
          export year=`date +%Y`
          mkdir input
          cp build/libs/*.jar input/
          cp build/dependencies/*.jar input/
          cp build/resources/main/images/icon.* input/
          echo "Create installer version $version/$norm_version - $year"
          echo "Manifest-Version: 1.0" > MANIFEST.MF
          echo "Main-Class: org.wuerthner.ambitusdesktop.Ambitus" >> MANIFEST.MF
          echo "Implementation-Version: $version" >> MANIFEST.MF
          echo "CopyrightYear: $year" >> MANIFEST.MF
          jar -ufm "input/ambitusdesktop-$version.jar" MANIFEST.MF >/dev/null 2>&1
          echo "content:"
          ls -lR input
          ls -lR build
      
      - name: Package Windows installer
        run: |
          jpackage --input input --resource-dir input --dest output -n Ambitus --main-jar "ambitusdesktop-${env:version}.jar" `
            --main-class org.wuerthner.ambitusdesktop.Ambitus --app-version "${env:norm_version}" --type msi --vendor "Ambitus Open Source" `
            --win-dir-chooser --win-menu --win-shortcut-prompt --win-shortcut --icon input/icon.ico
      
      - name: Rename Installer File
        shell: bash
        run: |
          mv output/*.msi output/ambitus-$version.msi
          
      - name: Upload Windows installer
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: output/*.msi

  release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]
    env:
      GITHUB_ACTOR: ${{ github.actor }}
      GITHUB_TOKEN: ${{ secrets.GH_PACKA_GES_TOKEN }}

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: output

      - name: Determine release type
        run: |
          file=$(ls output/*/*.deb | head -n 1)
          version=$(echo "$file" | sed 's/.*mbitus-//' | sed 's/\.[^.]*$//')
          echo "version=$version" >> $GITHUB_ENV
          echo "version: $version"
          if [[ "$version" == *SNAPSHOT* ]]; then
            echo "prerelease=true" >> $GITHUB_ENV
          else
            echo "prerelease=false" >> $GITHUB_ENV
          fi
          
      - name: verify
        run: |
          echo "Verify content..."
          ls -laR output
          echo "version: ${{ env.version }}"
          echo "pre-release: ${{ env.prerelease }}"
          
      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          files: output/*/*
          tag_name: ambitus-${{ env.version }}
          name: Ambitus ${{ env.version }}
          prerelease: ${{ env.prerelease }}

          
  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
